<!DOCTYPE html>
<html>

<head>

  <meta charset="utf-8" />
  <title>Launcher Web Flasher</title>
  <meta name="description"
    content="Easily allows users to install the Launcher on M5Cardputer, M5StickC, M5stickC plus & M5stickC Plus2, Lilygo T-Embed, T-Deck, T-Display, CYD and other boards to come!" />
  <meta name="viewport" content="width=device-width" />
  <meta name="color-scheme" content="dark light" />

  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
      margin: 0;
      padding: 20px;
      color: #00dd00;
      background-color: #202124;
      --btn-color: #333333;
      --btn-color-hover: #444444;
      --btn-color-active: #008000;
      --btn-color-active-hover: #009000;
    }

    .content {
      max-width: 600px;
      margin: 0 auto;
      padding: 12px;
    }

    h2 {
      margin-top: 2em;
    }

    h3 {
      margin-top: 1.5em;
      margin-bottom: 0.25em;
    }

    a {
      color: #e0d204;
      text-decoration: none;
    }

    a:hover {
      text-decoration: underline;
    }

    .hidden {
      display: none;
    }

    esp-web-install-button[install-unsupported] {
      visibility: inherit;
    }

    .content pre {
      max-width: 100%;
      overflow-y: scroll;
    }

    .footer {
      margin-top: 24px;
      border-top: 1px solid #ccc;
      padding-top: 24px;
      text-align: center;
    }

    .footer .initiative {
      font-style: italic;
      margin-top: 16px;
    }

    table {
      border-spacing: 0;
    }

    td {
      padding: 8px;
      border-bottom: 1px solid #ccc;
    }

    .radios li {
      list-style: none;
      line-height: 2em;
    }

    .logo {
      max-width: 400px;
      display: block;
      margin-left: auto;
      margin-right: auto;
    }

    .wrapper {
      display: flex;
      justify-content: center;
    }

    .back1usb {
      height: 18%;
      width: 20%;
      padding: 10px;
      text-align: center;
    }

    .back2usb {
      height: 18%;
      width: 20%;
      padding: 10px;
      text-align: center;
    }

    .info-box {
      border: 2px solid var(--btn-color-active);
      background-color: transparent;
      color: white;
      border-radius: 8px;
      margin: 20px 10%;
    }

    .switch,
    .device-category,
    .device-list {
      display: flex;
      justify-content: center;
      margin: 0;
      padding-top: 2px;
    }

    .switch label,
    .device-category .device-button,
    .device-list input[type="radio"]+label,
    .connect-to-device-button,
    .downloadButton {
      cursor: pointer;
      font-size: 16px;
      background-color: var(--btn-color);
      border: none;
      color: #fff;
      border-radius: 4px;
      padding: 10px 15px;
      margin: 5px 5px;
      transition: background-color 0.3s;
    }

    .switch label:hover,
    .device-category .device-button:hover,
    .device-list input[type="radio"]+label:hover {
      background-color: var(--btn-color-hover);
    }

    .switch input[type="radio"]:checked+label,
    .device-category .device-button.active,
    .device-list input[type="radio"]:checked+label,
    .connect-to-device-button {
      background-color: var(--btn-color-active);
    }

    .switch input[type="radio"]:checked+label:hover,
    .device-category .device-button.active:hover,
    .device-list input[type="radio"]:checked+label:hover,
    .connect-to-device-button:hover {
      background-color: var(--btn-color-active-hover);
    }

    .downloadButton {
      background-color: #202124;
      border: 1px solid var(--btn-color-active);
    }

    .downloadButton:hover {
      background-color: var(--btn-color);
    }

    .switch label,
    .device-button {
      width: 150px;
    }

    .switch input[type="radio"],
    .device-manufacturer-category-selection input[type="radio"],
    .device-list {
      display: none;
    }

    .device-category {
      display: flex;
      justify-content: space-between;
      margin-bottom: 20px;
    }

    .device-manufacturer-category-selection label {
      display: block;
    }

    .device-list {
      padding-left: 0;
    }

    .instructions {
      display: none;
      margin-top: 5px;
      padding: 5px;
      border: 1px solid var(--btn-color-active);
      background-color: #202124;
      border-radius: 5px;
    }

    .btn {
      margin: 2px;
      padding: 5px 10px;
      border: 1px solid var(--btn-color-active);
      background-color: #202124;
      color: white;
      cursor: pointer;
      border-radius: 4px;
    }

    .btn:hover {
      background-color: var(--btn-color-active-hover);
    }

    @media (prefers-color-scheme: dark) {
      body {
        background-color: var(--btn-color);
        color: #fff;
      }

      a {
        color: #58a6ff;
      }
    }
  </style>
  <script type="module" src="https://unpkg.com/esp-web-tools@8.0.1/dist/web/install-button.js?module"></script>
</head>

<body>
  <img src="Launcher_anim.webp" alt="Logo" class="logo">

  <center>
    <div class="content">
      <p><b>Connect your device then select the "Flash" option and push connect.</b><br></p>
      <p>If asked to put your device into <b>download mode</b> do as follows:</p>

      <button class="btn" onclick="showInstructions('cardputer')">Cardputer</button>
      <button class="btn" onclick="showInstructions('stickcs')">StickCs</button>
      <button class="btn" onclick="showInstructions('t-embed')">T-Embed</button>
      <button class="btn" onclick="showInstructions('t-deck')">T-Deck</button>
      <button class="btn" onclick="showInstructions('others')">Others</button>

      <div id="cardputer" class="instructions">
        <b>Cardputer:</b> Hold the btn G0 (upper right corner) and press RST (upper left corner).
      </div>
      <div id="stickcs" class="instructions">
        <b>StickCs:</b> Turn off, connect a jumper cable between GND and G0 (in the header pin), connect the USB Cable
        and remove the jumper cable.
      </div>
      <div id="t-embed" class="instructions">
        <b>T-Embed:</b> Keep encoder center button pressed and press RST button (CC1101 this btn is on the board, beside
        ESP32-S3 chip).
      </div>
      <div id="t-deck" class="instructions">
        <b>T-Deck:</b> Keep the trackpad button pressed and press RST (in the left side).
      </div>
      <div id="others" class="instructions">
        <b>Others:</b> Turn off, keep BOOT button pressed and plug the USB Cable (or press RST Button).
      </div>
      <h3>Select Release</h3>
      <div class="switch">
        <input type="radio" name="version" id="latest" value="Release" checked onclick="toggleCategory('wip',0)" />
        <label for="latest">Latest Release</label>
        <input type="radio" name="version" id="beta" value="Beta" onclick="toggleCategory('wip',1)" />
        <label for="beta">Beta Release</label>
      </div>

      <div class="device-manufacturer-category-selection">
        <h3>Select Device Manufacturer/Category</h3>
        <div class="device-category" style="display: flex; flex-wrap: wrap; justify-content: center;">
          <button class="device-button" id="m5stack" onclick="toggleDeviceCategory('m5stack')">M5Stack</button>
          <button class="device-button" id="lilygo" onclick="toggleDeviceCategory('lilygo')">Lilygo</button>
          <button class="device-button" id="cyd" onclick="toggleDeviceCategory('cyd')"> CYD </button>
          <button class="device-button" id="custom" onclick="toggleDeviceCategory('custom')">Custom Boards</button>
          <button class="device-button" id="esp32" onclick="toggleDeviceCategory('esp32')">ESP32</button>
          <button class="device-button" id="wip" onclick="toggleDeviceCategory('wip')"
            style="display: none">WIP</button>
        </div>

        <div class="device-selection" style="display:none">
          <h3>Select Device</h3>

          <!-- Information added by workflow -->

          <!-- BOARDS -->

          <!-- Information added by workflow -->

        </div>
      </div>

      <div class="connect-download-buttons" style="display:none">
        <h3>Choose How to Install Firmware</h3>
        <p class="button-row" align="center">
          <esp-web-install-button>
            <button slot="activate" class="connect-to-device-button">
              CONNECT TO DEVICE
            </button>
          </esp-web-install-button>
        </p>
        <p class="button-row" align="center">
          <button class="downloadButton" onclick="downloadFile(selectedDevice)">DOWNLOAD FIRMWARE
            .BIN</button>
        </p>
      </div>
  </center>
  <div class="footer">
    Flasher by <a href="https://github.com/bmorcelli">bmorcelli</a> &mdash;
    Installer powered by <a href="https://esphome.github.io/esp-web-tools/">ESP Web Tools</a> üõ†Ô∏è
  </div>
  <script>
    var selectedDevice = '';

    function toggleCategory(category, state) {
      const selectedList = document.getElementById(category);
      if (state == 0) { selectedList.style.display = 'none'; }
      else { selectedList.style.display = 'block'; }
      toggleDeviceCategory('none');
      displayButtons(false);
    }

    function displayButtons(visibility) {
      const connectDownloadButtons = document.querySelector('.connect-download-buttons');
      connectDownloadButtons.style.display = visibility ? 'block' : 'none';
    }

    function toggleDeviceCategory(category) {
      const typeInput = document.querySelector('input[name="type"]:checked');
      if (typeInput) {
        typeInput.checked = false;
      }

      document.querySelectorAll('.device-list').forEach(function (list) {
        list.style.display = 'none';
      });

      document.querySelectorAll('.device-button').forEach(function (button) {
        button.classList.remove('active');
      });

      displayButtons(false);

      const deviceSelection = document.querySelector('.device-selection');
      deviceSelection.style.display = category !== 'none' ? 'block' : 'none';

      if (category == 'none') { return; }
      const selectedList = document.querySelector('.' + category);
      selectedList.style.display = 'block';

      document.getElementById(category).classList.add('active');
    }

    function updateManifest() {
      const versionInput = document.querySelector('input[name="version"]:checked');
      const typeInput = document.querySelector('input[name="type"]:checked');

      if (!versionInput || !typeInput) {
        //console.error('Version or type is not selected.');
        return; // Evita a execu√ß√£o do resto da fun√ß√£o caso algum dos campos n√£o esteja selecionado
      }

      const version = versionInput.value;
      const type = typeInput.value;

      const button = document.querySelector('esp-web-install-button');
      button.manifest = `${version}/Manifest-${type}.json`;

      document.querySelector('input[name="type"]:checked')?.value;

      selectedDevice = type;

      displayButtons(true);
    }

    document.querySelectorAll('input[name="version"], input[name="type"]').forEach(radio =>
      radio.addEventListener("change", updateManifest)
    );

    updateManifest();

    function showInstructions(device) {
      // Hide all instructions
      document.querySelectorAll('.instructions').forEach(el => el.style.display = 'none');
      // Show the selected instruction
      document.getElementById(device).style.display = 'block';
    }

    function downloadFile(file) {
      const betaSelected = document.querySelector('input[name="version"]:checked').id === 'beta';
      const baseUrl = betaSelected
        ? 'https://github.com/bmorcelli/Launcher/raw/refs/heads/WebPage/Beta/bins/Launcher-'
        : 'https://github.com/bmorcelli/Launcher/raw/refs/heads/WebPage/Release/bins/Launcher-';

      const fileUrl = baseUrl + encodeURIComponent(file) + '.bin';
      const link = document.createElement('a');
      link.href = fileUrl;
      link.download = file;
      link.style.display = 'none';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }
  </script>

</body>

</html>